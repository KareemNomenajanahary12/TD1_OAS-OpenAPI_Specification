openapi: 3.0.0
info:
  title: Course and Student Management API
  version: 1.0.0
  description: API for managing courses and students
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/HEINOMENA2/course_management_API/1.0.0  
paths:
  /courses:
    get:
      summary: Retrieve all courses
      description: Get a list of all courses. Supports filtering by name and year.
      parameters:
        - name: name
          in: query
          description: Filter by course name
          required: false
          schema:
            type: string
        - name: year
          in: query
          description: Filter by course year
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
    post:
      summary: Add a new course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '201':
          description: Course created successfully
    put:
      summary: Update a course
      description: Idempotent request to update a course.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '200':
          description: Course updated successfully
    delete:
      summary: Delete a course
      description: Deletes a course by its ID.
      parameters:
        - name: id
          in: query
          description: ID of the course to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Course deleted successfully

  /students:
    get:
      summary: Retrieve all students
      description: Get a list of all students. Supports filtering by name.
      parameters:
        - name: name
          in: query
          description: Filter by student name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      summary: Add a new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Student added successfully
    put:
      summary: Update a student
      description: Idempotent request to update a student.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Student updated successfully
    delete:
      summary: Delete a student
      description: Deletes a student by their ID.
      parameters:
        - name: id
          in: query
          description: ID of the student to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Student deleted successfully

components:
  schemas:
    Group:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        promotion:
          type: string
          enum: [G, H, K]
        studentCount:
          type: integer
    Student:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        sex:
          type: string
          enum: [M, F]
        birthdate:
          type: string
          format: date
        reference:
          type: string
        group:
          $ref: '#/components/schemas/Group'
